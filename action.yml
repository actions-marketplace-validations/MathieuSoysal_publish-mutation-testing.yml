name: Deploy - Publish Mutation testing report
description: "Automatically generate your mutation testing and publish report to GitHub Page."
branding:
  icon: "book-open"
  color: "white"

inputs:
  # Required inputs
  java-version: # version of java
    description: "Java version inside your project"
    required: true
    default: "11"
    type: string
  GITHUB_TOKEN: # GitHub Token
    description: "The GitHub token the GitHub repository"
    required: true
  github-page-branch: # branch where the javadoc is hosted
    description: "Branch where the javadoc is hosted"
    required: true
    default: pitest
    type: string
  target-folder: # target folder for the javadoc contents
    description: "Directory where the javadoc contents should be stored"
    required: true
    default: .
    type: string

  # Optional inputs
  java-distribution: # distribution of java
    description: "Java distribution inside your project"
    required: false
    default: "adopt"
  custom-command:
    description: "Custom command to generate the javadoc"
    required: false
    default: ""
    type: string
  pitest-source-folder:
    description: "Custom path for the new Javadoc"
    required: false
    default: target/pit-reports
    type: string

  # Development and testing inputs
  without-deploy: # deploy the javadoc to the GitHub Page, is used for development testing with nektos/act
    description: "Enable or disable deploy of the javadoc to the GitHub Page"
    required: false
    default: "false"
    type: boolean
  without-checkout: # checkout the javadoc branch, is used for development testing with nektos/act
    description: "Enable or disable the checkout"
    required: false
    default: "false"
    type: boolean

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      if: inputs.without-checkout == 'false'
      with:
        fetch-depth: 0

    - uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.java-distribution }}
        cache: maven

    - name: Generate mutation testing report with Maven
      if: inputs.custom-command == ''
      run: mvn -DwithHistory test-compile org.pitest:pitest-maven:mutationCoverage
      shell: bash

    - name: Generate mutation testing report with custom command
      if: inputs.custom-command != ''
      run: ${{ inputs.custom-command }}
      shell: bash

    - name: Deploy to GitHub Page ðŸš€ with Maven
      if: ${{ inputs.without-deploy == 'false' }}
      uses: JamesIves/github-pages-deploy-action@v4.4.3
      with:
        token: ${{ inputs.GITHUB_TOKEN }}
        branch: ${{ inputs.github-page-branch }}
        clean: true
        folder: ${{ inputs.pitest-source-folder }}
        target-folder: ${{ inputs.target-folder }}
